// Objective-C API for talking to github.com/getlantern/pathdb/minisql Go package.
//   gobind -lang=objc github.com/getlantern/pathdb/minisql
//
// File is generated by gobind. Do not edit.

#ifndef __Minisql_H__
#define __Minisql_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class MinisqlDBAPI;
@class MinisqlDBAdapter;
@class MinisqlQueryableAPI;
@class MinisqlTxAPI;
@class MinisqlTxAdapter;
@class MinisqlValue;
@protocol MinisqlDB;
@class MinisqlDB;
@protocol MinisqlQueryable;
@class MinisqlQueryable;
@protocol MinisqlResult;
@class MinisqlResult;
@protocol MinisqlRows;
@class MinisqlRows;
@protocol MinisqlScannableRows;
@class MinisqlScannableRows;
@protocol MinisqlTx;
@class MinisqlTx;
@protocol MinisqlValues;
@class MinisqlValues;

@protocol MinisqlDB <NSObject>
- (id<MinisqlTx> _Nullable)begin:(NSError* _Nullable* _Nullable)error;
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (id<MinisqlResult> _Nullable)exec:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
- (id<MinisqlRows> _Nullable)query:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
@end

@protocol MinisqlQueryable <NSObject>
- (id<MinisqlResult> _Nullable)exec:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
- (id<MinisqlRows> _Nullable)query:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
@end

@protocol MinisqlResult <NSObject>
/**
 * LastInsertId returns the integer generated by the database
in response to a command. Typically this will be from an
"auto increment" column when inserting a new row. Not all
databases support this feature, and the syntax of such
statements varies.
 */
- (BOOL)lastInsertId:(int64_t* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
/**
 * RowsAffected returns the number of rows affected by an
update, insert, or delete. Not every database or database
driver may support this.
 */
- (BOOL)rowsAffected:(int64_t* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
@end

@protocol MinisqlRows <NSObject>
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (BOOL)next;
- (BOOL)scan:(id<MinisqlValues> _Nullable)values error:(NSError* _Nullable* _Nullable)error;
@end

@protocol MinisqlScannableRows <NSObject>
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (BOOL)next;
// skipped method ScannableRows.Scan with unsupported parameter or return types

@end

@protocol MinisqlTx <NSObject>
- (BOOL)commit:(NSError* _Nullable* _Nullable)error;
- (id<MinisqlResult> _Nullable)exec:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
- (id<MinisqlRows> _Nullable)query:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
- (BOOL)rollback:(NSError* _Nullable* _Nullable)error;
@end

@protocol MinisqlValues <NSObject>
- (MinisqlValue* _Nullable)get:(long)index;
- (long)len;
- (void)set:(long)index value:(MinisqlValue* _Nullable)value;
@end

@interface MinisqlDBAPI : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) MinisqlQueryableAPI* _Nullable queryableAPI;
- (MinisqlTxAPI* _Nullable)begin:(NSError* _Nullable* _Nullable)error;
// skipped method DBAPI.Exec with unsupported parameter or return types

// skipped method DBAPI.Query with unsupported parameter or return types

@end

@interface MinisqlDBAdapter : NSObject <goSeqRefInterface, MinisqlDB, MinisqlQueryable> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field DBAdapter.DB with unsupported type: *database/sql.DB

- (id<MinisqlTx> _Nullable)begin:(NSError* _Nullable* _Nullable)error;
// skipped method DBAdapter.BeginTx with unsupported parameter or return types

- (BOOL)close:(NSError* _Nullable* _Nullable)error;
// skipped method DBAdapter.Conn with unsupported parameter or return types

// skipped method DBAdapter.Driver with unsupported parameter or return types

- (id<MinisqlResult> _Nullable)exec:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
// skipped method DBAdapter.ExecContext with unsupported parameter or return types

- (BOOL)ping:(NSError* _Nullable* _Nullable)error;
// skipped method DBAdapter.PingContext with unsupported parameter or return types

// skipped method DBAdapter.Prepare with unsupported parameter or return types

// skipped method DBAdapter.PrepareContext with unsupported parameter or return types

- (id<MinisqlRows> _Nullable)query:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
// skipped method DBAdapter.QueryContext with unsupported parameter or return types

// skipped method DBAdapter.QueryRow with unsupported parameter or return types

// skipped method DBAdapter.QueryRowContext with unsupported parameter or return types

// skipped method DBAdapter.SetConnMaxIdleTime with unsupported parameter or return types

// skipped method DBAdapter.SetConnMaxLifetime with unsupported parameter or return types

- (void)setMaxIdleConns:(long)n;
- (void)setMaxOpenConns:(long)n;
// skipped method DBAdapter.Stats with unsupported parameter or return types

@end

@interface MinisqlQueryableAPI : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) id<MinisqlQueryable> _Nullable queryable;
// skipped method QueryableAPI.Exec with unsupported parameter or return types

// skipped method QueryableAPI.Query with unsupported parameter or return types

@end

@interface MinisqlTxAPI : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) MinisqlQueryableAPI* _Nullable queryableAPI;
- (BOOL)commit:(NSError* _Nullable* _Nullable)error;
// skipped method TxAPI.Exec with unsupported parameter or return types

// skipped method TxAPI.Query with unsupported parameter or return types

- (BOOL)rollback:(NSError* _Nullable* _Nullable)error;
@end

@interface MinisqlTxAdapter : NSObject <goSeqRefInterface, MinisqlQueryable, MinisqlTx> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field TxAdapter.Tx with unsupported type: *database/sql.Tx

- (BOOL)commit:(NSError* _Nullable* _Nullable)error;
- (id<MinisqlResult> _Nullable)exec:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
// skipped method TxAdapter.ExecContext with unsupported parameter or return types

// skipped method TxAdapter.Prepare with unsupported parameter or return types

// skipped method TxAdapter.PrepareContext with unsupported parameter or return types

- (id<MinisqlRows> _Nullable)query:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
// skipped method TxAdapter.QueryContext with unsupported parameter or return types

// skipped method TxAdapter.QueryRow with unsupported parameter or return types

// skipped method TxAdapter.QueryRowContext with unsupported parameter or return types

- (BOOL)rollback:(NSError* _Nullable* _Nullable)error;
// skipped method TxAdapter.Stmt with unsupported parameter or return types

// skipped method TxAdapter.StmtContext with unsupported parameter or return types

@end

@interface MinisqlValue : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)initBytes:(NSData* _Nullable)val;
- (nullable instancetype)initInt:(long)val;
- (nullable instancetype)initString:(NSString* _Nullable)val;
@property (nonatomic) long type;
@property (nonatomic) NSString* _Nonnull string;
@property (nonatomic) long int_;
@property (nonatomic) NSString* _Nonnull bytes;
@end

FOUNDATION_EXPORT const int64_t MinisqlValueTypeBytes;
FOUNDATION_EXPORT const int64_t MinisqlValueTypeInt;
FOUNDATION_EXPORT const int64_t MinisqlValueTypeString;

FOUNDATION_EXPORT MinisqlValue* _Nullable MinisqlNewValueBytes(NSData* _Nullable val);

FOUNDATION_EXPORT MinisqlValue* _Nullable MinisqlNewValueInt(long val);

FOUNDATION_EXPORT MinisqlValue* _Nullable MinisqlNewValueString(NSString* _Nullable val);

// skipped function NewValues with unsupported parameter or return types


FOUNDATION_EXPORT MinisqlDBAPI* _Nullable MinisqlWrap(id<MinisqlDB> _Nullable db);

@class MinisqlDB;

@class MinisqlQueryable;

@class MinisqlResult;

@class MinisqlRows;

@class MinisqlScannableRows;

@class MinisqlTx;

@class MinisqlValues;

@interface MinisqlDB : NSObject <goSeqRefInterface, MinisqlDB> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (id<MinisqlTx> _Nullable)begin:(NSError* _Nullable* _Nullable)error;
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (id<MinisqlResult> _Nullable)exec:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
- (id<MinisqlRows> _Nullable)query:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
@end

@interface MinisqlQueryable : NSObject <goSeqRefInterface, MinisqlQueryable> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (id<MinisqlResult> _Nullable)exec:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
- (id<MinisqlRows> _Nullable)query:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * Result is a duplicate of sql.Result to allow binding with gomobile
 */
@interface MinisqlResult : NSObject <goSeqRefInterface, MinisqlResult> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * LastInsertId returns the integer generated by the database
in response to a command. Typically this will be from an
"auto increment" column when inserting a new row. Not all
databases support this feature, and the syntax of such
statements varies.
 */
- (BOOL)lastInsertId:(int64_t* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
/**
 * RowsAffected returns the number of rows affected by an
update, insert, or delete. Not every database or database
driver may support this.
 */
- (BOOL)rowsAffected:(int64_t* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
@end

@interface MinisqlRows : NSObject <goSeqRefInterface, MinisqlRows> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (BOOL)next;
- (BOOL)scan:(id<MinisqlValues> _Nullable)values error:(NSError* _Nullable* _Nullable)error;
@end

@interface MinisqlScannableRows : NSObject <goSeqRefInterface, MinisqlScannableRows> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (BOOL)next;
// skipped method ScannableRows.Scan with unsupported parameter or return types

@end

@interface MinisqlTx : NSObject <goSeqRefInterface, MinisqlTx> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)commit:(NSError* _Nullable* _Nullable)error;
- (id<MinisqlResult> _Nullable)exec:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
- (id<MinisqlRows> _Nullable)query:(NSString* _Nullable)query args:(id<MinisqlValues> _Nullable)args error:(NSError* _Nullable* _Nullable)error;
- (BOOL)rollback:(NSError* _Nullable* _Nullable)error;
@end

@interface MinisqlValues : NSObject <goSeqRefInterface, MinisqlValues> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (MinisqlValue* _Nullable)get:(long)index;
- (long)len;
- (void)set:(long)index value:(MinisqlValue* _Nullable)value;
@end

#endif
