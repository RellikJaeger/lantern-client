name: Android CI

on:
  push:
    branches: [atavism/ci-updates]

permissions:
  contents: read

env:
  GOPRIVATE: github.com/getlantern
  ANDROID_ARCH_JAVA: armeabi-v7a arm64-v8a x86 x86_64
  ANDROID_ARCH_GOMOBILE: android/arm,android/arm64,android/386,android/amd64 
jobs:
  build:
    runs-on: ubuntu-latest-8-cores
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Pull LFS objects
      run: git lfs pull

    # Install Flutter
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.7.6"
        channel: "stable"
    - run: flutter --version

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Granting private modules access
      run: |
        git config --global url."https://${{ secrets.GH_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

    - name: Setup Sentry CLI
      uses: mathieu-bour/setup-sentry-cli@v1
      with:
        version: latest
        token: ${{ SECRETS.SENTRY_TOKEN }} # from GitHub secrets
        organization: getlantern
        project: android

    - name: Setup JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11

    - name: Set environment variables
      run: |
        echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
 
    - name: Build Lantern core Android library
      run: make android-lib

    - name: Install Flutter dependencies
      run: flutter pub get

    - name: Set gradle properties
      env:
        GRADLE_PROPERTIES: ${{ secrets.GRADLE_PROPERTIES }}
      run: |
        mkdir -p ~/.gradle/
        echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
        echo "${GRADLE_PROPERTIES}" > ~/.gradle/gradle.properties

    - name: Decode Keystore
      id: write_file
      uses: timheuer/base64-to-file@v1.2
      with:
        fileName: 'keystore.release.jks'
        fileDir: './android/app'
        encodedString: ${{ secrets.KEYSTORE }}

    - name: Build with Gradle
      run: |
        ln -fs android/gradle.properties .
        ./android/gradlew -PlanternVersion=$VERSION -PandroidArch=all -PandroidArchJava="${{ env.ANDROID_ARCH_JAVA }}" \
        -PlanternRevisionDate=$REVISION_DATE -b android/app/build.gradle assembleProdSideload
        cp build/app/outputs/apk/prod/sideload/app-prod-sideload.apk lantern-installer-internal.apk
        sentry upload-dif --wait -o getlantern -p android build/app/intermediates/merged_native_libs/prodRelease/out/lib
        cat lantern-internal-internal.apk | bzip2 > lantern_update_android_arm.bz2

    - name: Build Mobile Bundle
      run: |
        ./android/gradlew -PlanternVersion=$VERSION -PandroidArch=all -PandroidArchJava="${{ env.ANDROID_ARCH_JAVA }}" \
        -PlanternRevisionDate=$REVISION_DATE -b android/app/build.gradle bundlePlay
        sentry upload-dif --wait -o getlantern -p android build/app/intermediates/merged_native_libs/prodRelease/out/lib
        cp build/app/outputs/bundle/prodPlay/app-prod-play.aab lantern-installer-internal.aab

    - name: Setup S3cmd cli tool
      uses: s3-actions/s3cmd@v1.4.0
      with:
        provider: aws
        region: ${{ secrets.AWS_REGION }}
        access_key: ${{ secrets.AWS_ACCESS_KEY }}
        secret_key: ${{ secrets.AWS_SECRET_KEY }}

#    - name: Upload to S3
#      run: make release-qa

#    - name: Upload Android Release to Play Store Alpha track
#      uses: r0adkll/upload-google-play@v1
#      with:
#        serviceAccountJsonPlainText: ${{ SERVICE_ACCOUNT_JSON }}
#        packageName: org.getlantern.lantern
#        releaseFiles: lantern-installer-internal.aab
#        track: alpha
