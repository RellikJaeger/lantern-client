name: Android CI

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read

env:
  GOPRIVATE: github.com/getlantern
  ANDROID_ARCH_JAVA: armeabi-v7a arm64-v8a x86 x86_64
  ANDROID_ARCH_GOMOBILE: android/arm,android/arm64,android/386,android/amd64 
jobs:
  build:
    runs-on: ubuntu-latest-8-cores
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Pull LFS objects
      run: git lfs pull

    # Install Flutter
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.7.6"
        channel: "stable"
    - run: flutter --version

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Granting private modules access
      run: |
        git config --global url."https://${{ secrets.GH_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

    - name: Setup Go mobile
      run: |
        go install golang.org/x/mobile/cmd/gomobile@latest
        gomobile init

    - name: Setup Sentry CLI
      uses: mathieu-bour/setup-sentry-cli@v1
      with:
        version: latest
        token: ${{ SECRETS.SENTRY_TOKEN }} # from GitHub secrets
        organization: getlantern
        project: android

    - name: Setup JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11

    - name: Set environment variables
      run: |
        echo "VERSION=$(cat VERSION)"
        echo "GIT_REVISION_SHORTCODE=$(git rev-parse --short HEAD)"
        echo "GIT_REVISION=$(git describe --abbrev=0 --tags --exact-match 2> /dev/null || git rev-parse --short HEAD)"
        echo "REVISION_DATE=$(date -u -j -f '%F %T %z' '$GIT_REVISION_DATE' +'%Y%m%d.%H%M%S' 2>/dev/null || date -u -d '$GIT_REVISION_DATE' +'%Y%m%d.%H%M%S')"
        echo "BUILD_DATE=$(date -u +%Y%m%d.%H%M%S)"
        echo "TAG_COMMIT=$(git rev-list --abbrev-commit -1 $VERSION)"
 
    - name: Build Lantern core Android library
      run: |
        gomobile bind -target=${{ env.ANDROID_ARCH_GOMOBILE }} \
        -tags='headless lantern' -o=android/app/libs/liblantern-all.aar -androidapi=19 \
        -ldflags="-s -w -X github.com/getlantern/flashlight/common.RevisionDate=$REVISION_DATE \
                  -X github.com/getlantern/flashlight/common.BuildDate=$BUILD_DATE \
                  -X github.com/getlantern/flashlight/common.CompileTimePackageVersion=$VERSION" \
        github.com/getlantern/android-lantern/internalsdk

    - name: Install Flutter dependencies
      run: flutter pub get

    - name: Set gradle properties
      env:
        GRADLE_PROPERTIES: ${{ secrets.GRADLE_PROPERTIES }}
      run: |
        mkdir -p ~/.gradle/
        echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
        echo "${GRADLE_PROPERTIES}" > ~/.gradle/gradle.properties

    - name: Decode Keystore
      id: write_file
      uses: timheuer/base64-to-file@v1.2
      with:
        fileName: 'keystore.release.jks'
        fileDir: './android/app'
        encodedString: ${{ secrets.KEYSTORE }}

    - name: Build with Gradle
      run: |
        ln -fs android/gradle.properties .
        ./android/gradlew -PlanternVersion=$VERSION -PandroidArch=all -PandroidArchJava="${{ env.ANDROID_ARCH_JAVA }}" \
        -PlanternRevisionDate=$REVISION_DATE -b android/app/build.gradle assembleProdSideload
        cp build/app/outputs/apk/prod/sideload/app-prod-sideload.apk lantern-installer-internal.apk

    - name: Build Mobile Bundle
      run: |
        ./android/gradlew -PlanternVersion=$VERSION -PandroidArch=all -PandroidArchJava="${{ env.ANDROID_ARCH_JAVA }}" \
        -PlanternRevisionDate=$REVISION_DATE -b android/app/build.gradle bundlePlay
        cp build/app/outputs/bundle/prodPlay/app-prod-play.aab lantern-installer-internal.aab

    - name: Setup S3cmd cli tool
      uses: s3-actions/s3cmd@v1.4.0
      with:
        provider: aws
        region: ${{ secrets.AWS_REGION }}
        access_key: ${{ secrets.AWS_ACCESS_KEY }}
        secret_key: ${{ secrets.AWS_SECRET_KEY }}

    - name: Upload to S3
      run: |
        echo "INSTALLER_NAMES=$(ls -1 lantern-installer-internal*.*)"
        echo "S3_BUCKET=${{ secrets.S3_BUCKET }}"
        for NAME in "$INSTALLER_NAMES"; do
          sha256sum "${NAME}" | cut -d ' ' -f 1 > "${NAME}.test.sha256"
          echo "Uploading SHA-256 $(cat ${NAME}.test.sha256)"
          s3cmd put -P "${NAME}.test.sha256 s3://$S3_BUCKET"
          echo "Uploading ${NAME} to S3"
          s3cmd put -P "${NAME} s3://$S3_BUCKET"
          echo "VERSIONED=${NAME}-$VERSION.${NAME#*.}"
          s3cmd cp "s3://$S3_BUCKET/${NAME} s3://$S3_BUCKET/$VERSIONED"
          s3cmd setacl "s3://$S3_BUCKET/$VERSIONED" --acl-public
          s3cmd modify --add-header='content-type':'application/vnd.android.package-archive' "s3://$S3_BUCKET/${NAME}"
        done
